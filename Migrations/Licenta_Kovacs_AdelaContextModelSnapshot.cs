// <auto-generated />
using System;
using Licenta_Kovacs_Adela.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Licenta_Kovacs_Adela.Migrations
{
    [DbContext(typeof(Licenta_Kovacs_AdelaContext))]
    partial class Licenta_Kovacs_AdelaContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Licenta_Kovacs_Adela.Models.Aroma", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<string>("DenumireAroma")
                        .IsRequired()
                        .HasMaxLength(70)
                        .HasColumnType("nvarchar(70)");

                    b.Property<string>("Imagine")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Aroma");
                });

            modelBuilder.Entity("Licenta_Kovacs_Adela.Models.Bob", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<string>("DenumireBoabe")
                        .IsRequired()
                        .HasMaxLength(70)
                        .HasColumnType("nvarchar(70)");

                    b.Property<string>("Imagine")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Bob");
                });

            modelBuilder.Entity("Licenta_Kovacs_Adela.Models.CafeaClient", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<int?>("AromaID")
                        .HasColumnType("int");

                    b.Property<int?>("BobID")
                        .HasColumnType("int");

                    b.Property<string>("DenumireCafea")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("LapteID")
                        .HasColumnType("int");

                    b.Property<int?>("MarimeID")
                        .HasColumnType("int");

                    b.Property<int?>("TipCafeaID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("AromaID");

                    b.HasIndex("BobID");

                    b.HasIndex("LapteID");

                    b.HasIndex("MarimeID");

                    b.HasIndex("TipCafeaID");

                    b.ToTable("CafeaClient");
                });

            modelBuilder.Entity("Licenta_Kovacs_Adela.Models.CafeaTipuriToppingClient", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<int>("CafeaClientID")
                        .HasColumnType("int");

                    b.Property<int>("ToppingID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("CafeaClientID");

                    b.HasIndex("ToppingID");

                    b.ToTable("CafeaTipuriToppingClient");
                });

            modelBuilder.Entity("Licenta_Kovacs_Adela.Models.Lapte", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<string>("DenumireLapte")
                        .IsRequired()
                        .HasMaxLength(70)
                        .HasColumnType("nvarchar(70)");

                    b.Property<string>("Imagine")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Lapte");
                });

            modelBuilder.Entity("Licenta_Kovacs_Adela.Models.Marime", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<string>("MarimeMl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Marime");
                });

            modelBuilder.Entity("Licenta_Kovacs_Adela.Models.Membru", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Nume")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Prenume")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Telefon")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Membru");
                });

            modelBuilder.Entity("Licenta_Kovacs_Adela.Models.TipCafea", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<string>("Tip")
                        .IsRequired()
                        .HasMaxLength(70)
                        .HasColumnType("nvarchar(70)");

                    b.HasKey("ID");

                    b.ToTable("TipCafea");
                });

            modelBuilder.Entity("Licenta_Kovacs_Adela.Models.Topping", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<string>("DenumireTopping")
                        .IsRequired()
                        .HasMaxLength(70)
                        .HasColumnType("nvarchar(70)");

                    b.Property<string>("Imagine")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Topping");
                });

            modelBuilder.Entity("Licenta_Kovacs_Adela.Models.CafeaClient", b =>
                {
                    b.HasOne("Licenta_Kovacs_Adela.Models.Aroma", "Aroma")
                        .WithMany("CafeleClient")
                        .HasForeignKey("AromaID");

                    b.HasOne("Licenta_Kovacs_Adela.Models.Bob", "Bob")
                        .WithMany("CafeleClient")
                        .HasForeignKey("BobID");

                    b.HasOne("Licenta_Kovacs_Adela.Models.Lapte", "Lapte")
                        .WithMany("CafeleClient")
                        .HasForeignKey("LapteID");

                    b.HasOne("Licenta_Kovacs_Adela.Models.Marime", "Marime")
                        .WithMany("CafeleClient")
                        .HasForeignKey("MarimeID");

                    b.HasOne("Licenta_Kovacs_Adela.Models.TipCafea", "TipCafea")
                        .WithMany("CafeleClient")
                        .HasForeignKey("TipCafeaID");

                    b.Navigation("Aroma");

                    b.Navigation("Bob");

                    b.Navigation("Lapte");

                    b.Navigation("Marime");

                    b.Navigation("TipCafea");
                });

            modelBuilder.Entity("Licenta_Kovacs_Adela.Models.CafeaTipuriToppingClient", b =>
                {
                    b.HasOne("Licenta_Kovacs_Adela.Models.CafeaClient", "CafeaClient")
                        .WithMany("CafeaTipuriTopping")
                        .HasForeignKey("CafeaClientID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Licenta_Kovacs_Adela.Models.Topping", "Topping")
                        .WithMany("CafeaTipuriToppingClient")
                        .HasForeignKey("ToppingID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CafeaClient");

                    b.Navigation("Topping");
                });

            modelBuilder.Entity("Licenta_Kovacs_Adela.Models.Aroma", b =>
                {
                    b.Navigation("CafeleClient");
                });

            modelBuilder.Entity("Licenta_Kovacs_Adela.Models.Bob", b =>
                {
                    b.Navigation("CafeleClient");
                });

            modelBuilder.Entity("Licenta_Kovacs_Adela.Models.CafeaClient", b =>
                {
                    b.Navigation("CafeaTipuriTopping");
                });

            modelBuilder.Entity("Licenta_Kovacs_Adela.Models.Lapte", b =>
                {
                    b.Navigation("CafeleClient");
                });

            modelBuilder.Entity("Licenta_Kovacs_Adela.Models.Marime", b =>
                {
                    b.Navigation("CafeleClient");
                });

            modelBuilder.Entity("Licenta_Kovacs_Adela.Models.TipCafea", b =>
                {
                    b.Navigation("CafeleClient");
                });

            modelBuilder.Entity("Licenta_Kovacs_Adela.Models.Topping", b =>
                {
                    b.Navigation("CafeaTipuriToppingClient");
                });
#pragma warning restore 612, 618
        }
    }
}
